import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.layers import Flatten,Dense,Conv2D,MaxPooling2D,Dropout



fashion=tf.keras.datasets.fashion_mnist

(x_train,y_train),(x_test,y_test)=fashion.load_data()

x_train.shape

x_test.shape

class_names=["Tshirt","trouser","Pullover","dress","Coat","sandal","Shirt","Sneaker","bag","ankelboot"]

#scaling
x_train=x_train/255.0
x_test=x_test/255.0


plt.figure(figsize=(10,10))
for i in range(25):
    plt.subplot(5,5,i+1)
    plt.xticks([])
    plt.yticks([])
    plt.imshow(x_test[i])
    plt.xlabel(class_names[y_test[i]])
    
   
   
   
   model=Sequential()
model.add(Conv2D(filters=32,kernel_size=(3,3),strides=(1,1),padding="valid",input_shape=(28,28,1),activation="relu"))
model.add(MaxPooling2D(pool_size=(2,2),strides=(2,2)))
model.add(Dropout(rate=0.25))
model.add(Flatten())
model.add(Dense(128,activation="relu"))
model.add(Dense(10,activation="softmax"))



model.summary()



model.compile(optimizer="adam",loss=tf.keras.losses.sparse_categorical_crossentropy,metrics=["accuracy"])



model.fit(x_train,y_train,epochs=10,batch_size=256,validation_split=0.2)


y_pred=model.predict(x_test)


print(np.argmax(y_pred[0]))
print(y_test[0])


plt.figure(figsize=(10,10))
for i in range(25):
    plt.subplot(5,5,i+1)
    plt.xticks([])
    plt.yticks([])
    plt.imshow(x_test[i])
    if(y_test[i]==(np.argmax(y_pred[i]))):
        color="green"
    else:
        color="red"
    plt.xlabel("{} {}".format(class_names[np.argmax(y_pred[i])],round(100*np.max(y_pred[i]),2)),color=color)
    
    
    
    
